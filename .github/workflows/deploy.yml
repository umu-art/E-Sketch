name: Deploy

on:
  push:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io

jobs:
  lint-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js 21
        uses: actions/setup-node@v3
        with:
          node-version: 21

      - name: Install dependencies
        run: npm i -g @redocly/cli@latest

      - name: Lint proxy API
        run: cd ./api && npx @redocly/cli@latest lint ./nb-proxy-api.yaml --config ./config/lint.yaml

      - name: Lint back API
        run: cd ./api && npx @redocly/cli@latest lint ./nb-back-api.yaml --config ./config/lint.yaml


  test-api:
    needs: [ lint-api ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js 21
        uses: actions/setup-node@v3
        with:
          node-version: 21

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Go environment
        uses: actions/setup-go@v5.0.2
        with:
          go-version: 1.23.0
          cache: true

      - name: Test API
        run: cd ./api && chmod +x ./build.sh && ./build.sh


  build-back-image:
    needs: [ test-api ]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for nb-back
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/nb-back

      - name: Build and push Docker image for nb-back
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: ./iac/images/nb-back/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


  test-front:
    needs: [ test-api ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js 21
        uses: actions/setup-node@v3
        with:
          node-version: 21

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Go environment
        uses: actions/setup-go@v5.0.2
        with:
          go-version: 1.23.0
          cache: true

      - name: Build API
        run: cd ./api && chmod +x ./build.sh && ./build.sh

      - name: Install deps
        run: cd ./nb-front && npm install

      - name: Test front
        run: cd ./nb-front && npm run test


  build-front-image:
    needs: [ test-front ]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js 21
        uses: actions/setup-node@v3
        with:
          node-version: 21

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Go environment
        uses: actions/setup-go@v5.0.2
        with:
          go-version: 1.23.0
          cache: true

      - name: Build API
        run: cd ./api && chmod +x ./build.sh && ./build.sh

      - name: Install deps
        run: (cd ./nb-front;npm install)

      - name: Build np-front
        run: (cd ./nb-front;npm run build)

      - name: Log in to the Container registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for nb-front
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/nb-front

      - name: Build and push Docker image for nb-front
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: ./iac/images/nb-front/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


  test-proxy:
    needs: [ test-api ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js 21
        uses: actions/setup-node@v3
        with:
          node-version: 21

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Go environment
        uses: actions/setup-go@v5.0.2
        with:
          go-version: 1.23.0
          cache: true

      - name: Build API
        run: cd ./api && chmod +x ./build.sh && ./build.sh --skip-js-build

      - name: Install deps
        run: cd ./nb-proxy && go mod tidy

      - name: Test proxy
        run: cd ./nb-proxy && go test -json ./...


  build-proxy-image:
    needs: [ test-proxy ]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js 21
        uses: actions/setup-node@v3
        with:
          node-version: 21

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Go environment
        uses: actions/setup-go@v5.0.2
        with:
          go-version: 1.23.0
          cache: true

      - name: Build API
        run: cd ./api && chmod +x ./build.sh && ./build.sh --skip-js-build

      - name: Install deps
        run: cd ./nb-proxy && go mod tidy

      - name: Build proxy
        run: cd ./nb-proxy && CGO_ENABLED=0 GOOS=linux go build -o ./build/app ./src

      - name: Log in to the Container registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for nb-proxy
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/nb-proxy

      - name: Build and push Docker image for nb-proxy
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: ./iac/images/nb-proxy/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


  kube-update:
    needs: [ build-nb-back-image, build-nb-front-image, build-nb-proxy-image ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app: [ nb-back, nb-front, nb-proxy ]

    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBESECRET }}
          context: kubernetes-admin@kubernetes

      - name: Deploy ${{ matrix.app }}
        run: kubectl rollout restart deployment/${{ matrix.app }} -n nb-units
