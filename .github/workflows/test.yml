name: Test

on:
  pull_request: [ ]

env:
  REGISTRY: ghcr.io

jobs:
  lint-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js 21
        uses: actions/setup-node@v4.0.4
        with:
          node-version: 21

      - name: Install redocly
        run: npm i -g @redocly/cli@latest

      - name: Lint proxy API
        run: cd ./api && npx @redocly/cli@latest lint ./est-proxy-api.yaml --config ./config/lint.yaml

      - name: Lint back API
        run: cd ./api && npx @redocly/cli@latest lint ./est-back-api.yaml --config ./config/lint.yaml

  build-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare and build Api
        uses: ./.github/workflows/actions/prepare_env
        with:
          cacheTag: api-${{ hashFiles('api/') }}

  lint-cpp:
    needs: [ lint-api, build-api ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          style: 'file'  # Use .clang-format config file
          tidy-checks: '-*' # disable clang-tidy
          thread-comments: ${{ github.event_name == 'pull_request' && 'update' }}
          files-changed-only: false

      - name: Fail
        if: steps.linter.outputs.checks-failed > 0
        continue-on-error: false
        run: exit 1

  test-front:
    needs: [ lint-api, build-api ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare and build Api
        uses: ./.github/workflows/actions/prepare_env
        with:
          cacheTag: api-${{ hashFiles('api/') }}

      - name: Install deps
        run: cd ./est-front && npm install

      - name: Test front
        run: cd ./est-front && npm run test

  test-proxy:
    needs: [ lint-api, build-api ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare and build Api
        uses: ./.github/workflows/actions/prepare_env
        with:
          cacheTag: api-${{ hashFiles('api/') }}

      - name: Install deps
        run: cd ./est-proxy && go mod tidy

      - name: Test proxy
        run: cd ./est-proxy && go test -json ./...

  test-back:
    needs: [ lint-api, build-api ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare and build Api
        uses: ./.github/workflows/actions/prepare_env
        with:
          cacheTag: api-${{ hashFiles('api/') }}
        
      - name: Run tests in docker
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: ./iac/images/est-back/Dockerfile
          push: false
