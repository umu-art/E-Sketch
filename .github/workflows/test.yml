name: Test

on:
  pull_request: [ ]

env:
  REGISTRY: ghcr.io

jobs:
  super-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Super-linter
        uses: super-linter/super-linter@v7.1.0
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  lint-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        uses: ./.github/workflows/actions/prepare_env

      - name: Install redocly
        run: npm i -g @redocly/cli@latest

      - name: Lint proxy API
        run: cd ./api && npx @redocly/cli@latest lint ./est-proxy-api.yaml --config ./config/lint.yaml

      - name: Lint back API
        run: cd ./api && npx @redocly/cli@latest lint ./est-back-api.yaml --config ./config/lint.yaml

  test-api:
    needs: [ lint-api ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        uses: ./.github/workflows/actions/prepare_env

      - name: Build API
        uses: ./.github/workflows/actions/build_api

  lint-cpp:
    needs: [ test-api ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          style: 'file'  # Use .clang-format config file
          tidy-checks: '-*' # disable clang-tidy
          thread-comments: ${{ github.event_name == 'pull_request' && 'update' }}
          files-changed-only: false
      - name: Fail
        if: steps.linter.outputs.checks-failed > 0
        run: exit 1

  test-front:
    needs: [ test-api ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        uses: ./.github/workflows/actions/prepare_env

      - name: Build API
        uses: ./.github/workflows/actions/build_api

      - name: Install deps
        run: cd ./est-front && npm install

      - name: Test front
        run: cd ./est-front && npm run test

  test-proxy:
    needs: [ test-api ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        uses: ./.github/workflows/actions/prepare_env

      - name: Build API
        uses: ./.github/workflows/actions/build_api

      - name: Install deps
        run: cd ./est-proxy && go mod tidy

      - name: Test proxy
        run: cd ./est-proxy && go test -json ./...

  test-back:
    needs: [ test-api ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        uses: ./.github/workflows/actions/prepare_env

      - name: Build API
        uses: ./.github/workflows/actions/build_api
        
#      - name: Run tests in docker
#        uses: docker/build-push-action@v5.3.0
#        with:
#          context: .
#          file: ./iac/images/est-back/test/Dockerfile
#          push: false

  test-mono:
    needs: [ test-api ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        uses: ./.github/workflows/actions/prepare_env

      - name: Build API
        uses: ./.github/workflows/actions/build_api

      - name: Build with Maven
        working-directory: ./est-mono
        run: mvn -B test -T1C --file pom.xml
