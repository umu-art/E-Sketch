---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: est-monitoring
  labels:
    app: filebeat
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat-cluster-role
  namespace: est-monitoring
  labels:
    app: filebeat
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - nodes
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat-cluster-role-binding
  namespace: est-monitoring
  labels:
    app: filebeat
roleRef:
  kind: ClusterRole
  name: filebeat-cluster-role
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: filebeat
    namespace: est-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: filebeat-role
  namespace: est-monitoring
  labels:
    app: filebeat
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs: [ "get", "create", "update" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: filebeat-role-binding
  namespace: est-monitoring
  labels:
    app: filebeat
roleRef:
  kind: Role
  name: filebeat-role
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: filebeat
    namespace: est-monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-daemonset-config
  namespace: est-monitoring
  labels:
    app: filebeat
data:
  filebeat.yml: |
    filebeat.inputs:
      - type: container
        paths:
          - /var/log/containers/*.log
        processors:
          - add_kubernetes_metadata:
              host: ${NODE_NAME}
              matchers:
                - logs_path:
                    logs_path: "/var/log/containers/"
    
    output.elasticsearch:
      host: '${NODE_NAME}'
      hosts: 'elasticsearch:9200'
      username: '${ELASTICSEARCH_USERNAME}'
      password: '${ELASTICSEARCH_PASSWORD}'
      protocol: https
      ssl.certificate_authorities: [ "/usr/share/filebeat/certs/elastic.crt" ]
    setup.kibana:
      host: "http://kibana:5601"
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: est-monitoring
  labels:
    app: filebeat
spec:
  selector:
    matchLabels:
      app: filebeat

  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate

  template:
    metadata:
      name: filebeat
      namespace: est-monitoring
      labels:
        app: filebeat
    spec:
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30

      volumes:
        - name: elasticsearch-certs
          secret:
            secretName: elasticsearch-certs
        - name: filebeat-config
          configMap:
            defaultMode: 0600
            name: filebeat-daemonset-config
        - name: data
          hostPath:
            path: /var/lib/filebeat-default-data
            type: DirectoryOrCreate
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: varlog
          hostPath:
            path: /var/log
        - name: varrundockersock
          hostPath:
            path: /var/run/docker.sock

      containers:
        - name: "filebeat"
          image: "dockerhub.timeweb.cloud/elastic/filebeat:8.14.3"
          imagePullPolicy: "IfNotPresent"
          args:
            - "-e"
            - "-E"
            - "http.enabled=true"

          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  #!/usr/bin/env bash -e
                  curl --fail 127.0.0.1:5066
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5

          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  #!/usr/bin/env bash -e
                  filebeat test output
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5

          resources:
            limits:
              cpu: 1000m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi

          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: elasticsearch-credentials
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: elasticsearch-credentials

          securityContext:
            privileged: false
            runAsUser: 0

          volumeMounts:
            - name: elasticsearch-certs
              mountPath: /usr/share/filebeat/certs/
            - name: filebeat-config
              mountPath: /usr/share/filebeat/filebeat.yml
              readOnly: true
              subPath: filebeat.yml
            - name: data
              mountPath: /usr/share/filebeat/data
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: varlog
              mountPath: /var/log
              readOnly: true
            - name: varrundockersock
              mountPath: /var/run/docker.sock
              readOnly: true
---
